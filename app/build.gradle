plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'    // ROOM

    id 'com.google.gms.google-services'   // Notifications & Pushes
}

// Указанные ниже android{} и dependencies{} были вставлени вместо предыдущих при переходе к модели MVVM
android {
    namespace 'ru.netology.nmedia'
    compileSdk 33

    defaultConfig {
        applicationId "ru.netology.nmedia"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures.viewBinding = true
    buildFeatures.buildConfig = true

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders.usesCleartextTraffic = false
            buildConfigField "String", "BASE_URL", '"https://netomedia.ru"'
        }
        debug {
            manifestPlaceholders.usesCleartextTraffic = true
            buildConfigField "String", "BASE_URL", '"http://10.0.2.2:9999"'
        }
    }
}

 dependencies {

    implementation 'org.chromium.net:cronet-embedded:98.4758.101'

    def appcompat_version = "1.5.1"
    def recyclerview_version = "1.2.1"
    def activity_version = "1.6.1"
    def lifecycle_version = "2.5.1"
    def constraintlayout_version = "2.1.4"
    def mdc_version = "1.7.0"
    def arch_version = "2.1.0"
    def fragment_version = "1.5.5" //"1.3.1"   //"1.5.5"
    //def gson_version = "2.8.6"    // УЖЕ СОДЕРЖИТСЯ в подключенном далее retrofit2:converter-gson
    def nav_version = "2.5.3"
    def room_version = "2.4.3"   // "2.5.0" - более свежая версия
    def firebase_version = "31.0.2" // "30.3.1" - более свежая версия
    def play_services_base_version = "18.1.0"
    def glide_version = "4.14.2" // "4.15.1" - более свежая версия
    //def picasso_version = "2.71828"   // либо Glide, либо Picasso
    //def okhttp_version = "4.10.0"  // УЖЕ СОДЕРЖИТСЯ в подключенном далее Retrofit
    def retrofit_version = "2.9.0"
    def retrofitgson_version = "2.9.0"
    def okhttplogging_version = "4.10.0" // "4.11.0" - более свежая версия
    def coroutines_version = "1.7.1"
    def swiperefreshlayout_version = "1.1.0"
    def coordinatorlayout_version = "1.2.0"
    def imagepicker_version = "2.1"


    //implementation 'androidx.core:core-ktx:+' // Avoid using + in version numbers; can lead to unpredictable and unrepeatable builds (androidx.core:core-ktx:+)
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$mdc_version"  // Material Design
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"   // Constraint Layout

    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"   // Recycler View
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // Это еще нужно? или все есть в navigation-fragment-ktx ?

    // gson отключаем, потому что будет retrofit2:converter-gson
    //implementation "com.google.code.gson:gson:$gson_version"    // Хранение данных (в формате json)

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Fragments
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // ROOM
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Автоматически предлагаемая библиотека room
    //implementation 'androidx.room:room-common:2.5.0'
    implementation "androidx.room:room-common:$room_version"

    // Notifications & Pushes
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation "com.google.firebase:firebase-messaging-ktx"
    implementation "com.google.android.gms:play-services-base:$play_services_base_version" // Проверка доступности Google APIs

    // Сетевые запросы, Main Thread
    //implementation "com.squareup.okhttp3:okhttp:$okhttp_version"  // УЖЕ СОДЕРЖИТСЯ в подключенном далее Retrofit

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitgson_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttplogging_version"

    // Обработка картинок
    implementation "com.github.bumptech.glide:glide:$glide_version"
    //implementation "com.squareup.picasso:picasso:$picasso_version" - библиотеки glide и picasso не подключаются вместе

    // Корутины в Andorid
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.room:room-ktx:$room_version"   // расширение для ROOM, чтобы она работала с корутинами

    // SwipeRefreshLayout - часть разметки для обработки "протаскивания"; CoordinatorLayout - тоже часть разметки
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayout_version"

    // Загрузка изображений на сервер, продвинутая работа с изображениями
    implementation "com.github.dhaval2404:imagepicker:$imagepicker_version"  // Требует добавления в список репозиториев в файле settings.gradle строки maven { url "https://jitpack.io" }


    // Автотесты
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

}

/*
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'nh.example.testappnh'
    compileSdk 34

    defaultConfig {
        applicationId "nh.example.testappnh"
        minSdk 27
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.0'
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}
*/
